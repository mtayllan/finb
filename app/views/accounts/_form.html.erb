<%= form_with(model: account, class: "contents") do |form| %>
  <% if account.errors.any? %>
    <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-lg mt-3">
      <h2><%= pluralize(account.errors.count, "error") %> prohibited this account from being saved:</h2>

      <ul>
        <% account.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= render UI::FormGroup.new do %>
    <%= render UI::FormLabel.new(form, :name) %>
    <%= render UI::TextField.new(form, :name) %>
  <% end %>

  <%= render UI::FormGroup.new do %>
    <%= render UI::FormLabel.new(form, :kind) %>
    <%= render UI::SelectField.new(name: form.field_name(:kind), placeholder: 'Select a kind', value: account.kind) do |comp| %>
      <% Account.kinds.each do |kind, _| %>
        <% comp.with_option(value: kind, label: t("account_kinds.#{kind}")) %>
      <% end %>
    <% end %>
  <% end %>

  <%= render UI::FormGroup.new do %>
    <%= render UI::FormLabel.new(form, :initial_balance) %>
    <%= render UI::MoneyField.new(form, :initial_balance) %>
  <% end %>

  <%= render UI::FormGroup.new do %>
    <%= render UI::FormLabel.new(form, :initial_balance_date) %>
    <%= render "components/ui/date_picker", name: form.field_name(:initial_balance_date), initial_value: account.initial_balance_date&.to_fs(:day_month_year) %>
  <% end %>

  <%= render UI::FormGroup.new do %>
    <%= render UI::FormLabel.new(form, :color) %>
    <%= render UI::ColorField.new(form, :color, default_value: account.color) %>
  <% end %>

  <div class="inline">
    <%= form.submit class: "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2 hover:cursor-pointer" %>
  </div>
<% end %>
